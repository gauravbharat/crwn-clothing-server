{"ast":null,"code":"var _jsxFileName = \"/Users/gauravmendse/Library/Mobile Documents/com~apple~CloudDocs/dev/react/ztm/crwn-clothing-server/client/src/App.js\";\n// 07212020 - Converted class component to a functional one to use Hooks,\n// also added code to unsubscribe from firestore listener\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Authentication from './pages/authentication/authentication.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport NoMatch from './pages/no-match/no-match.component';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { currentUserSelector } from './redux/user/user.selectors';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nconst App = ({\n  currentUser,\n  setCurrentUser\n}) => {\n  useEffect(() => {\n    /** onAuthStateChanged is a open subscription (open message system) between the app and firebase\n     * that is, whenever any changes occur on firebase, firebase sends out a message that user has updated\n     * This will automatically check for user login status\n     * since this is an open subscription, we also want to close the subscription since we don't want any memory leaks from JavaScript\n     * onAuthStateChanged returns a function inside the unsubscribeFromAuth property,\n     * which when called when component unmounts would closes the subscription */\n    //  listen for auth state changes\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    }); // unsubscribe to the listener when unmounting\n\n    return () => unsubscribeFromAuth(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(Authentication, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"*\",\n    component: NoMatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelector\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/gauravmendse/Library/Mobile Documents/com~apple~CloudDocs/dev/react/ztm/crwn-clothing-server/client/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","connect","createStructuredSelector","HomePage","ShopPage","Authentication","CheckoutPage","Header","NoMatch","setCurrentUser","currentUserSelector","auth","createUserProfileDocument","App","currentUser","unsubscribeFromAuth","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["// 07212020 - Converted class component to a functional one to use Hooks,\n// also added code to unsubscribe from firestore listener\nimport React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Authentication from './pages/authentication/authentication.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport NoMatch from './pages/no-match/no-match.component';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { currentUserSelector } from './redux/user/user.selectors';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nconst App = ({ currentUser, setCurrentUser }) => {\n  useEffect(() => {\n    /** onAuthStateChanged is a open subscription (open message system) between the app and firebase\n     * that is, whenever any changes occur on firebase, firebase sends out a message that user has updated\n     * This will automatically check for user login status\n     * since this is an open subscription, we also want to close the subscription since we don't want any memory leaks from JavaScript\n     * onAuthStateChanged returns a function inside the unsubscribeFromAuth property,\n     * which when called when component unmounts would closes the subscription */\n\n    //  listen for auth state changes\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n\n    // unsubscribe to the listener when unmounting\n    return () => unsubscribeFromAuth();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        {/* Shop page would have sub-routes under it e.g. shop/jackets, etc., hence exact keyword not used for path */}\n        <Route path='/shop' component={ShopPage} />\n        <Route exact path='/checkout' component={CheckoutPage} />\n        {/* Use conditional render, if user is signed-in Redirect to Homepage OR to sign-in page if user is logged-out */}\n        <Route\n          exact\n          path='/signin'\n          render={() =>\n            currentUser ? <Redirect to='/' /> : <Authentication />\n          }\n        />\n        <Route path='*' component={NoMatch} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: currentUserSelector,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}