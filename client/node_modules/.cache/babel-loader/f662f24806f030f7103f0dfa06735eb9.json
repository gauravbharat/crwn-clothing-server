{"ast":null,"code":"var _jsxFileName = \"/Users/gauravmendse/Library/Mobile Documents/com~apple~CloudDocs/dev/react/ztm/crwn-clothing-server/client/src/pages/shop/shop.component.jsx\";\n// 07212020 - Converted class component to a functional one to use Hooks\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionsPageContainer from '../collection/collection.container'; // /** 07192020 - Instead of passing the 'component' inside Route, render the modified components\n//  * passing the loading state\n//  * Explicitly pass the (match, location and history) props to the modified component in the 'render' property,\n//  * since Route passed them implicitly to the 'component' property */\n// const CollectionsOverviewWithSpinner = WithSpinnerHOC(CollectionOverview);\n// const CollectionsPageWithSpinner = WithSpinnerHOC(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStartAsync,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}` // render={(props) => (\n    //   <CollectionsOverviewWithSpinner\n    //     isLoading={isCollectionFetching}\n    //     {...props}\n    //   />\n    // )}\n    ,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionsPageContainer // render={(props) => (\n    //   <CollectionsPageWithSpinner\n    //     isLoading={!isCollectionsLoaded}\n    //     {...props}\n    //   />\n    // )}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}; // const mapStateToProps = createStructuredSelector({\n//   isCollectionsLoaded: isCollectionsLoadedSelector,\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/gauravmendse/Library/Mobile Documents/com~apple~CloudDocs/dev/react/ztm/crwn-clothing-server/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionsStartAsync","CollectionsOverviewContainer","CollectionsPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,wBAAP,MAAqC,oCAArC,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,0BAAF;AAA8BI,EAAAA;AAA9B,CAAD,KAA2C;AAC1DP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,0BAA0B;AAC3B,GAFQ,EAEN,CAACA,0BAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAFtB,CAGE;AACA;AACA;AACA;AACA;AACA;AARF;AASE,IAAA,SAAS,EAAEJ,4BATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEH,wBAFb,CAGE;AACA;AACA;AACA;AACA;AACA;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAyBD,CA9BD,C,CAgCA;AACA;AACA;;;AAEA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,0BAA0B,EAAE,MAAMO,QAAQ,CAACP,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["// 07212020 - Converted class component to a functional one to use Hooks\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionsPageContainer from '../collection/collection.container';\n\n// /** 07192020 - Instead of passing the 'component' inside Route, render the modified components\n//  * passing the loading state\n//  * Explicitly pass the (match, location and history) props to the modified component in the 'render' property,\n//  * since Route passed them implicitly to the 'component' property */\n// const CollectionsOverviewWithSpinner = WithSpinnerHOC(CollectionOverview);\n// const CollectionsPageWithSpinner = WithSpinnerHOC(CollectionPage);\n\nconst ShopPage = ({ fetchCollectionsStartAsync, match }) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n\n  return (\n    <div className='shop-page'>\n      <Route\n        exact\n        path={`${match.path}`}\n        // render={(props) => (\n        //   <CollectionsOverviewWithSpinner\n        //     isLoading={isCollectionFetching}\n        //     {...props}\n        //   />\n        // )}\n        component={CollectionsOverviewContainer}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        component={CollectionsPageContainer}\n        // render={(props) => (\n        //   <CollectionsPageWithSpinner\n        //     isLoading={!isCollectionsLoaded}\n        //     {...props}\n        //   />\n        // )}\n      />\n    </div>\n  );\n};\n\n// const mapStateToProps = createStructuredSelector({\n//   isCollectionsLoaded: isCollectionsLoadedSelector,\n// });\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}